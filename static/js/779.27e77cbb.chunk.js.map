{"version":3,"file":"static/js/779.27e77cbb.chunk.js","mappings":"mPAEaA,EAAKC,EAAAA,GAAAA,GAAH,gDAIFC,EAAKD,EAAAA,GAAAA,GAAH,oEAKFE,EAASF,EAAAA,GAAAA,EAAH,4C,SC6BnB,EAnCgB,WACdG,QAAQC,IAAI,WAEZ,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAEMC,GAAUC,EAAAA,EAAAA,MAAYC,GAY5B,OAVAC,EAAAA,EAAAA,YAAU,WACR,GAAuB,IAAnBL,EAAQM,OAAZ,CAGA,IAAMC,EAAa,IAAIC,gBAGvB,OAFAC,EAAAA,EAAAA,IAAWP,EAASD,EAAYM,GAEzB,kBAAMA,EAAWG,OAAjB,CAJN,CAKF,GAAE,CAACR,EAASF,KAGX,yBACsB,IAAnBA,EAAQM,OACPN,EAAQW,KAAI,SAAAC,GAAM,OAChB,yBACE,UAACnB,EAAD,YACE,SAACE,EAAD,UAAKiB,EAAOC,UACZ,SAACjB,EAAD,UAASgB,EAAOE,YAFTF,EAAOR,KAFF,KASlB,sEAIP,C,mKCpCKW,EAAU,mCAChBC,EAAAA,GAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAkB,SAACC,EAASX,GACvCS,EAAAA,GAAAA,IAAA,qCACqCD,GAAW,CAAEI,OAAQZ,EAAWY,SAClEC,MAAK,SAAAC,GAEJH,EAAQG,EAASC,KAAKC,QACvB,IACAC,OAAM,SAAAC,GAAC,OAAI5B,QAAQC,IAAI2B,EAAhB,GACX,EAEYC,EAAkB,SAACC,EAAST,EAASX,GAChDS,EAAAA,GAAAA,IAAA,6BAC6BW,EAD7B,oBACgDZ,GAAW,CAAEI,OAAQZ,EAAWY,SAC7EC,MAAK,SAAAC,GAEJH,EAAQG,EAASC,KAAKC,QACvB,IACAC,OAAM,SAAAC,GAAC,OAAI5B,QAAQC,IAAI2B,EAAhB,GACX,EAEYG,EAAkB,SAACxB,EAAIc,EAASW,EAAWtB,GACtDS,EAAAA,GAAAA,IAAA,gBACgBZ,EADhB,oBAC8BW,GAAW,CAAEI,OAAQZ,EAAWY,SAC3DC,MAAK,SAAAC,GAEJH,EAAQG,EAASC,MACjB,IAAIQ,EAAY,GAChBT,EAASC,KAAKS,OAAOpB,KAAI,SAAAqB,GAAK,OAAIF,EAAUG,KAAKD,EAAME,KAAzB,IAC9BL,EAAUC,EACX,IACAN,OAAM,SAAAC,GAAC,OAAI5B,QAAQC,IAAI2B,EAAhB,GACX,EAEYU,EAAU,SAAC/B,EAAIc,EAASX,GACnCS,EAAAA,GAAAA,IAAA,gBACgBZ,EADhB,4BACsCW,GAAW,CAAEI,OAAQZ,EAAWY,SACnEC,MAAK,SAAAC,GAE8B,IAA9BA,EAASC,KAAKc,KAAK9B,QAGvBY,EAAQG,EAASC,KAAKc,KACvB,IACAZ,OAAM,SAAAC,GAAC,OAAI5B,QAAQC,IAAI2B,EAAhB,GACX,EAEYhB,EAAa,SAACL,EAAIc,EAASX,GACtCS,EAAAA,GAAAA,IAAA,gBACgBZ,EADhB,4BACsCW,GAAW,CAAEI,OAAQZ,EAAWY,SACnEC,MAAK,SAAAC,GAEgC,IAAhCA,EAASC,KAAKe,eAGlBnB,EAAQG,EAASC,KAAKC,QACvB,IACAC,OAAM,SAAAC,GAAC,OAAI5B,QAAQC,IAAI2B,EAAhB,GACX,C","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","components/requests.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Li = styled.li`\n  margin-bottom: 30px;\n`;\n\nexport const H4 = styled.h4`\n  font-size: 14px;\n  margin-bottom: 10px;\n`;\n\nexport const Review = styled.p`\n  font-size: 12px;\n`;\n","import { getReviews } from 'components/requests';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { H4, Li, Review } from './Reviews.styled';\n\nconst Reviews = () => {\n  console.log('REVIEWS');\n\n  const [reviews, setReviews] = useState([]);\n\n  const movieId = useParams().id;\n\n  useEffect(() => {\n    if (reviews.length !== 0) {\n      return;\n    }\n    const controller = new AbortController();\n    getReviews(movieId, setReviews, controller);\n\n    return () => controller.abort();\n  }, [movieId, reviews]);\n\n  return (\n    <div>\n      {reviews.length !== 0 ? (\n        reviews.map(review => (\n          <ul>\n            <Li key={review.id}>\n              <H4>{review.author}</H4>\n              <Review>{review.content}</Review>\n            </Li>\n          </ul>\n        ))\n      ) : (\n        <p>We don't have any reviews for this movie.</p>\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst API_KEY = 'babda8599831afaa2c30cb95eedbc1fe';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrendingList = (setData, controller) => {\n  axios\n    .get(`trending/movie/day?api_key=${API_KEY}`, { signal: controller.signal })\n    .then(response => {\n      //   console.log(response);\n      setData(response.data.results);\n    })\n    .catch(e => console.log(e));\n};\n\nexport const getSearchedList = (request, setData, controller) => {\n  axios\n    .get(`search/movie?query=${request}&api_key=${API_KEY}`, { signal: controller.signal })\n    .then(response => {\n      //   console.log(response);\n      setData(response.data.results);\n    })\n    .catch(e => console.log(e));\n};\n\nexport const getMovieDetails = (id, setData, setGenres, controller) => {\n  axios\n    .get(`movie/${id}?api_key=${API_KEY}`, { signal: controller.signal })\n    .then(response => {\n      //   console.log(response);\n      setData(response.data);\n      let genreList = [];\n      response.data.genres.map(genre => genreList.push(genre.name));\n      setGenres(genreList);\n    })\n    .catch(e => console.log(e));\n};\n\nexport const getCast = (id, setData, controller) => {\n  axios\n    .get(`movie/${id}/credits?api_key=${API_KEY}`, { signal: controller.signal })\n    .then(response => {\n      //   console.log(response);\n      if (response.data.cast.length === 0) {\n        return;\n      }\n      setData(response.data.cast);\n    })\n    .catch(e => console.log(e));\n};\n\nexport const getReviews = (id, setData, controller) => {\n  axios\n    .get(`movie/${id}/reviews?api_key=${API_KEY}`, { signal: controller.signal })\n    .then(response => {\n      //   console.log(response);\n      if (response.data.total_results === 0) {\n        return;\n      }\n      setData(response.data.results);\n    })\n    .catch(e => console.log(e));\n};\n"],"names":["Li","styled","H4","Review","console","log","useState","reviews","setReviews","movieId","useParams","id","useEffect","length","controller","AbortController","getReviews","abort","map","review","author","content","API_KEY","axios","getTrendingList","setData","signal","then","response","data","results","catch","e","getSearchedList","request","getMovieDetails","setGenres","genreList","genres","genre","push","name","getCast","cast","total_results"],"sourceRoot":""}