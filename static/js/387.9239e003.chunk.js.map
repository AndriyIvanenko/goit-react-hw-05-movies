{"version":3,"file":"static/js/387.9239e003.chunk.js","mappings":"0OAEaA,EAAMC,EAAAA,GAAAA,IAAH,oFAMHC,EAAKD,EAAAA,GAAAA,GAAH,0FAMFE,EAAQF,EAAAA,GAAAA,EAAH,oE,2BC4BlB,EApCa,WACXG,QAAQC,IAAI,QAEZ,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACMC,GAAUC,EAAAA,EAAAA,MAAYC,GAS5B,OAPAC,EAAAA,EAAAA,YAAU,WACY,IAAhBL,EAAKM,SAGTC,EAAAA,EAAAA,IAAQL,EAASD,EAClB,GAAE,CAACC,EAASF,KAGX,wBACmB,IAAhBA,EAAKM,QACJN,EAAKQ,KAAI,SAAAC,GAAK,OACZ,UAACd,EAAD,YACE,SAACF,EAAD,CACEiB,IACED,EAAME,aAAN,yCACsCF,EAAME,cACxCC,EAENC,IAAI,iBAEN,4BACE,SAACjB,EAAD,UAAQa,EAAMK,QACd,uCAAeL,EAAMM,kBAXhBN,EAAML,GADH,KAkBrB,C,mKCtCKY,EAAU,mCAChBC,EAAAA,GAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAkB,SAAAC,GAC7BF,EAAAA,GAAAA,IAAA,qCACqCD,IAClCI,MAAK,SAAAC,GACJF,EAAQE,EAASC,KAAKC,QAEvB,IACAC,OAAM,SAAAC,GAAC,OAAI5B,QAAQC,IAAI2B,EAAhB,GACX,EAEYC,EAAkB,SAACC,EAASR,GACvCF,EAAAA,GAAAA,IAAA,6BAC6BU,EAD7B,oBACgDX,IAC7CI,MAAK,SAAAC,GACJF,EAAQE,EAASC,KAAKC,QACvB,IACAC,OAAM,SAAAC,GAAC,OAAI5B,QAAQC,IAAI2B,EAAhB,GACX,EAEYG,EAAkB,SAACxB,EAAIe,EAASU,EAASC,GACpDb,EAAAA,GAAAA,IAAA,gBACgBb,EADhB,oBAC8BY,IAC3BI,MAAK,SAAAC,GACJF,EAAQE,EAASC,MACjBQ,EAAUD,EAAQE,OAAOvB,KAAI,SAAAwB,GAAK,OAAIA,EAAMlB,KAAO,IAAjB,IACnC,IACAU,OAAM,SAAAC,GAAC,OAAI5B,QAAQC,IAAI2B,EAAhB,GACX,EAEYlB,EAAU,SAACH,EAAIe,GAC1BF,EAAAA,GAAAA,IAAA,gBACgBb,EADhB,4BACsCY,IACnCI,MAAK,SAAAC,GACJF,EAAQE,EAASC,KAAKtB,KACvB,IACAwB,OAAM,SAAAC,GAAC,OAAI5B,QAAQC,IAAI2B,EAAhB,GACX,EAEYQ,EAAa,SAAC7B,EAAIe,GAC7BF,EAAAA,GAAAA,IAAA,gBACgBb,EADhB,4BACsCY,IACnCI,MAAK,SAAAC,GACgC,IAAhCA,EAASC,KAAKY,eAGlBf,EAAQE,EAASC,KAAKC,QACvB,IACAC,OAAM,SAAAC,GAAC,OAAI5B,QAAQC,IAAI2B,EAAhB,GACX,C","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","components/requests.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Img = styled.img`\n  max-width: 75px;\n  height: 100%;\n  margin-right: 20px;\n`;\n\nexport const Li = styled.li`\n  display: flex;\n  margin-bottom: 10px;\n  align-items: center;\n`;\n\nexport const Actor = styled.p`\n  font-weight: 700;\n  margin-bottom: 5px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Actor, Img, Li } from './Cast.styled';\nimport defaulProfileImg from '../../images/default.profile.png';\nimport { getCast } from 'components/requests';\n\nconst Cast = () => {\n  console.log('CAST');\n\n  const [cast, setCast] = useState([]);\n  const movieId = useParams().id;\n\n  useEffect(() => {\n    if (cast.length !== 0) {\n      return;\n    }\n    getCast(movieId, setCast);\n  }, [movieId, cast]);\n\n  return (\n    <ul>\n      {cast.length !== 0 &&\n        cast.map(actor => (\n          <Li key={actor.id}>\n            <Img\n              src={\n                actor.profile_path\n                  ? `https://image.tmdb.org/t/p/w500${actor.profile_path}`\n                  : defaulProfileImg\n              }\n              alt=\"profile img\"\n            />\n            <div>\n              <Actor>{actor.name}</Actor>\n              <p>Character: {actor.character}</p>\n            </div>\n          </Li>\n        ))}\n    </ul>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst API_KEY = 'babda8599831afaa2c30cb95eedbc1fe';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrendingList = setData => {\n  axios\n    .get(`trending/movie/day?api_key=${API_KEY}`)\n    .then(response => {\n      setData(response.data.results);\n      //   console.log(response.data.results);\n    })\n    .catch(e => console.log(e));\n};\n\nexport const getSearchedList = (request, setData) => {\n  axios\n    .get(`search/movie?query=${request}&api_key=${API_KEY}`)\n    .then(response => {\n      setData(response.data.results);\n    })\n    .catch(e => console.log(e));\n};\n\nexport const getMovieDetails = (id, setData, details, setGenres) => {\n  axios\n    .get(`movie/${id}?api_key=${API_KEY}`)\n    .then(response => {\n      setData(response.data);\n      setGenres(details.genres.map(genre => genre.name + ', '));\n    })\n    .catch(e => console.log(e));\n};\n\nexport const getCast = (id, setData) => {\n  axios\n    .get(`movie/${id}/credits?api_key=${API_KEY}`)\n    .then(response => {\n      setData(response.data.cast);\n    })\n    .catch(e => console.log(e));\n};\n\nexport const getReviews = (id, setData) => {\n  axios\n    .get(`movie/${id}/reviews?api_key=${API_KEY}`)\n    .then(response => {\n      if (response.data.total_results === 0) {\n        return;\n      }\n      setData(response.data.results);\n    })\n    .catch(e => console.log(e));\n};\n"],"names":["Img","styled","Li","Actor","console","log","useState","cast","setCast","movieId","useParams","id","useEffect","length","getCast","map","actor","src","profile_path","defaulProfileImg","alt","name","character","API_KEY","axios","getTrendingList","setData","then","response","data","results","catch","e","getSearchedList","request","getMovieDetails","details","setGenres","genres","genre","getReviews","total_results"],"sourceRoot":""}